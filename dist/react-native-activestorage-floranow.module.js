import t from"rn-fetch-blob";import{btoa as r}from"abab";import e,{createContext as n,useContext as o,useState as a,useCallback as i,useMemo as s}from"react";var c=function(e){var n=e.path;try{return Promise.resolve(t.fs.hash(n,"md5")).then(function(t){var e=t.replace(/\r|\n/g,"").replace(/([\da-fA-F]{2}) ?/g,"0x$1 ").replace(/ +$/,"").split(" ").map(function(t){return parseInt(t)}),n=String.fromCharCode.apply(String,e);return r(n)})}catch(t){return Promise.reject(t)}};function u(){return(u=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t}).apply(this,arguments)}var l=0,d=function(r){var e,n=r.directUploadsUrl,o=r.file,a=r.headers,i=r.onStatusChange,s=r.interval,d=++l,h=!1,f=function(){e&&(h=!0,e.cancel())},p=function(t){i(u({},t,{id:d,cancel:f,file:o}))};return p({status:"waiting"}),new Promise(function(r){try{return Promise.resolve(function(i,l){try{var d=Promise.resolve(function(t){var r=t.directUploadsUrl,e=t.file,n=t.headers,o=void 0===n?{}:n;try{return Promise.resolve(c({path:e.path})).then(function(t){if(!t)throw new Error("Failed to get file checksum. Path: "+e.path);var n={filename:e.name,content_type:e.type||"image/jpeg",byte_size:e.size,checksum:t};return e.metadata&&(n.metadata=e.metadata),Promise.resolve(fetch(r,{method:"POST",body:JSON.stringify({blob:n}),headers:u({"Content-Type":"application/json"},o)})).then(function(t){return t.json()})})}catch(t){return Promise.reject(t)}}({directUploadsUrl:n,file:o,headers:a})).then(function(n){var a=n.direct_upload,i=a.url,c=a.headers,u=t.wrap(o.path);(e=t.fetch("PUT",i,c,u)).uploadProgress({interval:s},function(t,r){p({status:"uploading",progress:t/r*100,totalBytes:r,uploadedBytes:t})}).then(function(t){var e=t.info().status;p(e>=200&&e<400?{status:"success"}:{status:"error",error:new Error("Response not success")}),r(n.signed_id)}).catch(function(t){p(h?{status:"canceled"}:{status:"error",error:t}),r()})})}catch(t){return l(t)}return d&&d.then?d.then(void 0,l):d}(0,function(t){return p({status:"error",error:t}),r()}))}catch(t){return Promise.reject(t)}})},h=n({host:"http://localhost:3000",mountPath:"/rails/active_storage",interval:2e3}),f=h.Provider,p=function(t){return e.createElement(f,{value:{host:t.host,mountPath:t.mountPath,interval:t.interval}},t.children)},v=function(t){var r,e,n=(void 0===t?{}:t).onSuccess,c=u({},r=o(h),{mountPath:e=r.mountPath||"/rails/active_storage",directUploadsUrl:""+r.host+e+"/direct_uploads",interval:r.interval||2e3}),l=c.directUploadsUrl,f=c.interval,p=a([]),v=p[0],m=p[1],g=i(function(t){m(function(r){return function(t,r,e){void 0===e&&(e="id");var n=[].concat(t),o=n.findIndex(function(t){return t[e]===r[e]});return o>=0?n[o]=r:n.push(r),n}(r,t)})},[]),P=i(function(t){try{return Promise.resolve(Promise.all(t.map(function(t){return d({file:t,directUploadsUrl:l,onStatusChange:g,interval:f})}))).then(function(t){var r=t.filter(function(t){return!!t});return r.length>0&&n&&n({signedIds:r}),{signedIds:r}})}catch(t){return Promise.reject(t)}},[g,n]),y=s(function(){return v.some(function(t){return"uploading"===t.status})},[v]);return{upload:P,uploads:v,uploading:y}},m=function(t){return(0,t.children)(v({onSuccess:t.onSuccess}))};export{p as ActiveStorageProvider,m as DirectUpload,c as checksum,d as directUpload,v as useDirectUpload};
//# sourceMappingURL=react-native-activestorage-floranow.module.js.map
